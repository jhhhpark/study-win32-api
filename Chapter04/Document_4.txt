비작업영역(메뉴, 타이틀바, 스크롤 등)에서의 
메시지는 앞에 NC(Non Client)가 붙는다.

WM_MOUSEMOVE와 관련 일당들은 전부 작업 영역(client)에서 발생하는 마우스 메시지들임.

비작업영역의 메시지들은 WM_NC.... 임
비작업영역 메시지는 시스템이 내부적인 용도로 사용함.
예를 들면...
경계선에서 마우스를 놓으면 마우스 커서 모양이 <-> 이런 모양으로 바뀐다.
이런 메시지들은 반드시 DefWindowProc에서 도맡아 하므로 프로그램이 직접 처리할 필요는 없다.
필요하다면??? 반드시 메시지 처리 후에 DefWindowProc에서 처리되도록 해야 한다. 


타이머 생성, 제거
SetTimer(), KillTimer()

// 타이머 프로시저 형식
VOID(CALLBACK* TIMERPROC)(HWND hWnd, UINT iMesage, UINT_PTR idEvent, DWORD dwTimer)
hWnd = 해당 타이머를 생성한 윈도우 핸들
iMessage : WM_TIMER
idEvent : Timer 식별자
dwTimer : 현재 시스템 시간


SendMessage(HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam);
강제로 메시지를 던지는 함수

Procedure에서 메시지 처리 시 WM_TIMER메시지를 받으면 이때, wParam은 timer의 ID를 보냄.


[1] 과제) SanSu
30미만의 두 정수의 덧셈 암산 문제를 3초 간격으로 계속 출제하라.
입력은 받지 않아도 상관없으며 주기적으로 문제를 출제하기만 하면 된다.


[2] 과제) TimerText
일정 개수의 문자열을 일정한 시간 간격(2초 정도)으로 교체해서 출력하는 예제를 작성하라.
출력할 문자열을 배열로 정의하고 타이머를 설치한 후 주기적으로 출력할 문자열을 바꾸면 된다. 메인 윈도우 크기는
폭 300, 높이 100으로 하고 문자열을 (10, 10)에 출력한다.


[3] 과제) TimerText2
TimerText 예제와 마찬가지로 일정 시간 간격으로 문자열들을 교체하되 문자열이 아래에서 위로 스크롤되면서 
올라오도록 해 보자. 교체할 시간이 되면 y좌표 100에 문자열을 출력하고 점점 위로 올라와 y좌표 10에서 잠시 머무른 후
다음 문자열로 교체한다. 윈도우 환경에서의 이중 루프라고 생각하면 된다.
