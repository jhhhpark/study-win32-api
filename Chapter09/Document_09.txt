[Sokoban2]
[개작]
- 비트맵을 좀 예쁘게 만들고 애니메이션을 강화해 보자. 화면이 예쁘면 더 재미있어진다.
- 게임을 저장했다가 다음에 계속 할 수 있게 해 보자. ns 배열과 전역 변수들을 저장하면 된다.
- 사용자가 맵을 편집하여 새로운 스테이지를 만들 수 있도록 해 보자.
- 점수순으로 랭킹을 저장하는 기능을 만들어 보자.
- 짐의 종류를 다양하게 만들고 같은 종류끼리 모으도록 게임 규칙을 변경해 보자.
- 시간 제한이나 이동 회수에 제한을 둘 수도 있다.
- 리플레이 기능을 작성해 보자. 타이머로 Redo만 반복적으로 호출하면 되므로 취소보다 더 쉽다.



[테트리스]
[과제] Hexa2
: 콘솔용으로 만들어진 Hexa 게임을 그래픽 버전으로 옮겨 보자. 
테트리스와 거의 유사한 게임이므로 비슷한 방법으로 작성할 수 있다.
그래픽을 쓸 수 있으므로 벽돌을 예븐 모양으로 디자인할 수 있으며 
제거되는 벽돌에 애니메이션을 넣을 수도 있을 것이다.


[Couple2]
[분석]
#define random(n) (rand() % n)
랜덤 난수 생성 시 DOS에서는 흔히 srand(time(NULL))로 초기화했는데
time.h를 include해야 해서 윈도우즈 API를 이용하여 초기화하였다.
GetTickCount() 함수는 운영체제가 부팅된 후의 경과 시간을 조사하는 함수이므로 난수 발생기 초기화용으로 적합하다.

시간을 지연시키거나 설정을 할 때는 Timer를 이용한다.
Sleep함수는 시스템의 제어권을 가져가므로 멀티 태스킹 프로그램에서는 그 시간동안 아무것도 하지 못한다.
SetTImer(hWnd, 0, 1000, NULL);
...
wm_timer에서 0번 타이머 방생 시
KillTimer(hWnd, 0)
위 코드가 대기 시간을 만드는 일종의 공식같은 것이다.


[개작] 힌트
- 각 칸에 보여줄 비트맵을 여러 쌍 준비하고 옵션으로 선택할 수 있게 한다.
- 칸을 뒤집을 때 애니메이션 및 사운드 효과를 추가해 보자.
- 세 개씩 한 쌍을 이루도록 하면 좀 더 게임이 어려워질 것이다.
- 게임 중에도 0.5초 정도의 힌트를 두 번 정도 쓸 수 있게 한다.
- 찾은 시간으로 기록을 잰다.
- 중간에 포기하고 다시 시작할 수 있게 한다.